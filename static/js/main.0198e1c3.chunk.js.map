{"version":3,"sources":["components/common/Modal/Modal.module.css","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.module.css","components/common/Error/ErrorBox.module.css","App.module.css","components/common/Loader/Loader.module.css","components/common/Button/Button.module.css","components/ImageGallery/ImageGallery.module.css","components/ContentContainer/ContentContainer.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.jsx","components/common/Modal/Modal.jsx","components/common/Loader/Loader.jsx","components/common/Button/Button.jsx","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","services/pixabayApi.js","components/common/Error/ErrorBox.jsx","components/ContentContainer/ContentContainer.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","Searchbar","onSubmit","useState","value","setValue","className","s","searchbar","searchForm","event","preventDefault","trim","toast","error","type","formButton","formButtonLabel","formInput","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","modalRoot","document","querySelector","Modal","onClose","children","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","overlay","onClick","currentTarget","modal","Loader","container","color","height","width","Button","button","ImageGalleryItem","img","description","largeImg","item","src","alt","image","data-url","ImageGallery","images","onImageClick","imageGallery","map","id","webformatURL","largeImageURL","tags","fetchImages","query","page","fetch","then","response","json","ErrorBox","errorText","ContentContainer","onBtnClick","setImages","setError","isFetching","setIsFetching","status","setStatus","getImages","a","data","hits","length","Error","state","setTimeout","scrollTo","top","documentElement","scrollHeight","behavior","text","message","App","imageQuery","setImageQuery","setPage","showModal","setShowModal","imgDescription","setImgDescription","modalImg","setModalImg","app","dataset","url","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0198e1c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__27A_Y\",\"modal\":\"Modal_modal__3jN_8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ImageGalleryItem_item__1kzY4\",\"image\":\"ImageGalleryItem_image__23x3J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ErrorBox_container__BZgGe\",\"error\":\"ErrorBox_error__1i8Tm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__SLCIm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Loader_container__2omWO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__19JIv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__5IySE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ContentContainer_text__2Ay6J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__2VC7X\",\"searchForm\":\"Searchbar_searchForm__H68Uw\",\"formButton\":\"Searchbar_formButton__146Ir\",\"formButtonLabel\":\"Searchbar_formButtonLabel__3sfdH\",\"formInput\":\"Searchbar_formInput__1Qv2O\"};","import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport s from \"./Searchbar.module.css\";\r\n\r\nconst Searchbar = ({ onSubmit }) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleChange = ({ target: { value } }) => setValue(value.toLowerCase());\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (value.trim() === \"\") {\r\n      return toast.error(\"Type your query!\");\r\n    }\r\n\r\n    onSubmit(value);\r\n    setValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <header className={s.searchbar}>\r\n      <form className={s.searchForm} onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className={s.formButton}>\r\n          <span className={s.formButtonLabel}>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className={s.formInput}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={value}\r\n          onChange={handleChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Searchbar;\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Modal.module.css\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nconst Modal = ({ onClose, children }) => {\r\n  useEffect(() => {\r\n    const handleKeyDown = ({ code }) => {\r\n      if (code === \"Escape\") {\r\n        onClose();\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n  }, [onClose]);\r\n\r\n  function handleBackdropClick({ currentTarget, target }) {\r\n    if (currentTarget === target) {\r\n      onClose();\r\n    }\r\n  }\r\n\r\n  return createPortal(\r\n    <div className={s.overlay} onClick={handleBackdropClick}>\r\n      <div className={s.modal}>{children}</div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n","import Spiner from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport s from \"./Loader.module.css\";\r\n\r\nconst Loader = () => (\r\n  <div className={s.container}>\r\n    <Spiner type=\"ThreeDots\" color=\" #7efa2b\" height={80} width={80} />\r\n  </div>\r\n);\r\n\r\nexport default Loader;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Button.module.css\";\r\n\r\nconst Button = ({ onClick }) => (\r\n  <button type=\"button\" onClick={onClick} className={s.button}>\r\n    Load more!\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ImageGalleryItem.module.css\";\r\n\r\nconst ImageGalleryItem = ({ img, description, largeImg, onClick }) => (\r\n  <li className={s.item}>\r\n    <img\r\n      src={img}\r\n      alt={description}\r\n      className={s.image}\r\n      data-url={largeImg}\r\n      onClick={onClick}\r\n    />\r\n  </li>\r\n);\r\n\r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.propTypes = {\r\n  description: PropTypes.string.isRequired,\r\n  img: PropTypes.string.isRequired,\r\n  largeImg: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"./ImageGalleryItem/ImageGalleryItem\";\r\nimport s from \"./ImageGallery.module.css\";\r\n\r\nconst ImageGallery = ({ images, onImageClick }) => (\r\n  <ul className={s.imageGallery}>\r\n    {images.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n      <ImageGalleryItem\r\n        key={id}\r\n        img={webformatURL}\r\n        description={tags}\r\n        largeImg={largeImageURL}\r\n        onClick={onImageClick}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ImageGallery;\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      tags: PropTypes.string.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n  onImageClick: PropTypes.func.isRequired,\r\n};\r\n","const API_KEY = \"19048518-7cffd49b48c4ae5ad0525e878\";\r\n\r\nexport const fetchImages = (query, page) =>\r\n  fetch(\r\n    `https://pixabay.com/api/?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n  ).then((response) => response.json());\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ErrorBox.module.css\";\r\n\r\nconst ErrorBox = ({ errorText }) => (\r\n  <div className={s.container}>\r\n    <img\r\n      src=\"https://petskb.com/wp-content/uploads/2019/08/catcrying.png\"\r\n      alt=\"Cat\"\r\n      width=\"300\"\r\n    />\r\n    <p className={s.error}>{errorText}</p>\r\n  </div>\r\n);\r\n\r\nexport default ErrorBox;\r\n\r\nErrorBox.propTypes = {\r\n  errorText: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport Loader from \"../common/Loader/Loader\";\r\nimport Button from \"../common/Button/Button\";\r\nimport ImageGallery from \"../ImageGallery/ImageGallery\";\r\nimport { fetchImages } from \"../../services/pixabayApi\";\r\nimport ErrorBox from \"../common/Error/ErrorBox\";\r\nimport s from \"./ContentContainer.module.css\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst ContentContainer = ({ query, page, onBtnClick, onImageClick }) => {\r\n  const [images, setImages] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [status, setStatus] = useState(\"idle\");\r\n\r\n  useEffect(() => {\r\n    if (query === \"\") {\r\n      return;\r\n    }\r\n\r\n    const getImages = async () => {\r\n      try {\r\n        const data = await fetchImages(query, page);\r\n        const images = data.hits;\r\n\r\n        if (images.length === 0) {\r\n          throw Error(`Can't find pictures by '${query}' keyword!`);\r\n        }\r\n\r\n        setImages((state) => [...state, ...images]);\r\n        setIsFetching(false);\r\n        setStatus(\"resolved\");\r\n      } catch (error) {\r\n        setError(error);\r\n        setStatus(\"rejected\");\r\n      }\r\n    };\r\n\r\n    if (page > 1) {\r\n      setIsFetching(true);\r\n      getImages();\r\n      setTimeout(\r\n        () =>\r\n          window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: \"smooth\",\r\n          }),\r\n        1000\r\n      );\r\n    } else {\r\n      setImages([]);\r\n      setStatus(\"pending\");\r\n      getImages();\r\n    }\r\n  }, [query, page]);\r\n\r\n  if (status === \"idle\") {\r\n    return <div className={s.text}>Type your keyword!</div>;\r\n  }\r\n\r\n  if (status === \"pending\") {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (status === \"resolved\") {\r\n    return (\r\n      <>\r\n        <ImageGallery images={images} onImageClick={onImageClick} />\r\n\r\n        {isFetching ? <Loader /> : <Button onClick={onBtnClick} />}\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (status === \"rejected\") {\r\n    return <ErrorBox errorText={error.message} />;\r\n  }\r\n};\r\n\r\nexport default ContentContainer;\r\n\r\nContentContainer.propTypes = {\r\n  query: PropTypes.string.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  onBtnClick: PropTypes.func.isRequired,\r\n  onImageClick: PropTypes.func.isRequired,\r\n};\r\n","import { ToastContainer } from \"react-toastify\";\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport s from \"./App.module.css\";\nimport Modal from \"./components/common/Modal/Modal\";\nimport ContentContainer from \"./components/ContentContainer/ContentContainer\";\nimport { useState } from \"react\";\n\nconst App = () => {\n  const [imageQuery, setImageQuery] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [imgDescription, setImgDescription] = useState(\"\");\n  const [modalImg, setModalImg] = useState(\"\");\n\n  const onSubmit = (imageQuery) => {\n    setImageQuery(imageQuery);\n    setPage(1);\n  };\n\n  const onLoadMoreClick = () => {\n    setPage((page) => page + 1);\n  };\n\n  const openModal = ({ target: { alt, dataset } }) => {\n    setShowModal(true);\n    setImgDescription(alt);\n    setModalImg(dataset.url);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    setImgDescription(\"\");\n    setModalImg(\"\");\n  };\n\n  return (\n    <div className={s.app}>\n      <Searchbar onSubmit={onSubmit} />\n\n      <ContentContainer\n        query={imageQuery}\n        page={page}\n        onBtnClick={onLoadMoreClick}\n        onImageClick={openModal}\n      />\n\n      <ToastContainer autoClose={3000} />\n\n      {showModal && (\n        <Modal onClose={closeModal}>\n          <img src={modalImg} alt={imgDescription} />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}